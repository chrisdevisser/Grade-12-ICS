package u2a6_chrisdevisser_employeerecords;

import com.sun.media.sound.InvalidFormatException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java_utilities.CommonRegex;
import java_utilities.jna.Sapi;
import javax.swing.JOptionPane;

/**
 * A form to view, change, or enter information about an employee.
 * There are four fields: First name, Last name, Annual Salary, and Start Date.
 * When entering information about a new employee, all are editable.
 * When viewing an existing employee, only the annual salary is editable.
 *
 * @author Chris DeVisser
 * @see Employee
 */
public class EmployeeGui extends javax.swing.JFrame {
    /**
     * Stores the callback to be called when the form is closed.
     */
    private EmployeeGuiClosedCallback _callback;

    /**
     * Creates a new view for an employee.
     *
     * @param id The employee's ID.
     * @param e The employee to display. If null, indicates that this is a new
     * employee, and all information is editable
     * @param callback The callback to call when the form closes
     */
    public EmployeeGui(int id, Employee e, EmployeeGuiClosedCallback callback) {
        initComponents();

        _callback = callback;
        empId.setText(((Integer)id).toString());

        if (e != null) { //existing employee
            setTitle("Employee Information");
            
            firstName.setEditable(false);
            firstName.setText(e.getFirstName());

            lastName.setEditable(false);
            lastName.setText(e.getLastName());
            
            salary.setText(((Integer)e.getAnnualSalary()).toString());
            
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            startDate.setText(df.format(e.getStartDate()));
            startDate.setEditable(false);
        }

        getRootPane().setDefaultButton(saveExit);
        setLocationRelativeTo(null);
        setVisible(true);
    }

    /**
     * Calls the callback, if provided, and closes the form.
     * If any data is invalid, the closing is cancelled and the user notified.
     *
     * @param saved True if changes should be saved.
     */
    private void callAndClose(boolean saved) {
        if (saved && !checkValidity()) {
            return;
        }

        if (_callback != null) {
            try {
                Date date = new SimpleDateFormat("yyyy-MM-dd").parse(startDate.getText());
                _callback.invoke(saved, Integer.parseInt(empId.getText()), firstName.getText(), lastName.getText(), Integer.parseInt(salary.getText()), date);
            } catch (ParseException ex) {} //already checked in checkValidity
            //NumberFormatException let through
        }
        
        setVisible(false);
        dispose();
    }

    /**
     * Ensures the fields contain proper data.
     * Displays a message if a field is invalid.
     *
     * @return True if all fields are valid
     */
    private boolean checkValidity() {
        try {
            String first = firstName.getText();
            if (!CommonRegex.isFirstName(first, true)) {
                throw new InvalidFormatException("The first name is invalid.");
            }

            String last = lastName.getText();
            if (!CommonRegex.isLastName(last, true)) {
                throw new InvalidFormatException("The last name is invalid.");
            }

            Integer.parseInt(salary.getText());

            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            Date date = df.parse(startDate.getText());
            if (!df.format(date).equals(startDate.getText())) {
                throw new ParseException("", 0);
            }
        } catch (InvalidFormatException ex) {
            Sapi.Speak("That's not a valid name.");
            JOptionPane.showMessageDialog(null, ex.getMessage());
            return false;
        } catch (NumberFormatException ex) {
            Sapi.Speak("The salary must be a number.");
            JOptionPane.showMessageDialog(null, "The annual salary is invalid.");
            return false;
        } catch (ParseException ex) {
            Sapi.Speak("The date must match the format.");
            JOptionPane.showMessageDialog(null, "The date is invalid.");
            return false;
        }

        return true;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        firstName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lastName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        salary = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        startDate = new javax.swing.JTextField();
        saveExit = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        empId = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Employee Information");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                close(evt);
            }
        });

        jLabel1.setText("First name:");

        jLabel2.setText("Last name:");

        jLabel3.setText("Annual Salary ($):");

        jLabel4.setText("Starting Date (yyyy-mm-dd):");

        saveExit.setText("Save and Exit");
        saveExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAndExit(evt);
            }
        });

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Employee ID: ");

        empId.setEditable(false);
        empId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(empId, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(salary)
                                .addComponent(jLabel3)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addComponent(jLabel4))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(57, 57, 57)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(cancel))
                                            .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel2)
                                        .addGap(19, 19, 19))
                                    .addComponent(lastName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(saveExit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(empId)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(salary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveExit)
                    .addComponent(cancel))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Saves changes and closes the form, cancelling on errors.
     * 
     * @param evt Unused
     */
    private void saveAndExit(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAndExit
        callAndClose(true);
    }//GEN-LAST:event_saveAndExit

    /**
     * Closes the form without saving changes, cancelling on errors.
     * 
     * @param evt Unused
     */
    private void exit(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit
        callAndClose(false);
    }//GEN-LAST:event_exit

    private void close(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_close
        callAndClose(false);
    }//GEN-LAST:event_close

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JTextField empId;
    private javax.swing.JTextField firstName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField lastName;
    private javax.swing.JTextField salary;
    private javax.swing.JButton saveExit;
    private javax.swing.JTextField startDate;
    // End of variables declaration//GEN-END:variables

}
